{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jason/IdeaProjects/react-exercises/src/lists-conditionals--assignment-problem/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ValidationComponent from \"./ValidationComponent\";\nimport CharComponent from \"./CharComponent\";\nimport Person from \"../../Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lengthSize: 0\n    };\n\n    this.textLength = event => {\n      // console.log( {lengthSize: event.target.value.length} )\n      this.setState({\n        lengthSize: event.target.value.length\n      });\n    };\n\n    this.charComp = event => {\n      return event.target.value;\n    };\n  }\n\n  render() {\n    const testingString = \"testing\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strike\", {\n            children: \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strike\", {\n            children: \"Create a new component (=> ValidationComponent) which receives the text length as a prop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"strike\", {\n            children: \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"When you click a CharComponent, it should be removed from the entered text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hint: Keep in mind that JavaScript strings are basically arrays!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, index) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePersonHandler(index),\n            name: person.name,\n            age: person.age,\n            changed: event => this.nameChangedHandler(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 30\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), \"})\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jason/IdeaProjects/react-exercises/src/lists-conditionals--assignment-problem/src/App.js"],"names":["React","Component","ValidationComponent","CharComponent","Person","App","state","lengthSize","textLength","event","setState","target","value","length","charComp","render","testingString","persons","map","person","index","deletePersonHandler","name","age","nameChangedHandler","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAExBK,KAFwB,GAEhB;AACJC,MAAAA,UAAU,EAAE;AADR,KAFgB;;AAAA,SAMxBC,UANwB,GAMVC,KAAD,IAAW;AACpB;AACF,WAAKC,QAAL,CAAe;AAACH,QAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC;AAAhC,OAAf;AACD,KATuB;;AAAA,SAWxBC,QAXwB,GAWZL,KAAD,IAAW;AAClB,aAAOA,KAAK,CAACE,MAAN,CAAaC,KAApB;AACH,KAbuB;AAAA;;AAe1BG,EAAAA,MAAM,GAAG;AACH,UAAMC,aAAa,GAAG,SAAtB;AAEF,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,gCACI;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,iCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAWI;AAAA,kBAEQ,KAAKV,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtC,8BAAO,QAAC,MAAD;AACH,YAAA,KAAK,EAAE,MAAM,KAAKC,mBAAL,CAAyBD,KAAzB,CADV;AAEH,YAAA,IAAI,EAAED,MAAM,CAACG,IAFV;AAGH,YAAA,GAAG,EAAEH,MAAM,CAACI,GAHT;AAKH,YAAA,OAAO,EAAGd,KAAD,IAAW,KAAKe,kBAAL,CAAwBf,KAAxB,EAA+BU,MAAM,CAACM,EAAtC;AALjB,aAIEN,MAAM,CAACM,EAJT;AAAA;AAAA;AAAA;AAAA,kBAAP;AAOH,SARD;AAFR;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AA6BH;;AA/CyB;;AAkD5B,eAAepB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ValidationComponent from \"./ValidationComponent\";\nimport CharComponent from \"./CharComponent\"\nimport Person from \"../../Person/Person\";\n\nclass App extends Component {\n\n    state = {\n        lengthSize: 0\n    }\n\n    textLength = (event) => {\n        // console.log( {lengthSize: event.target.value.length} )\n      this.setState( {lengthSize: event.target.value.length} );\n    }\n\n    charComp = (event) => {\n        return event.target.value;\n    }\n\n  render() {\n        const testingString = \"testing\"\n\n      return (\n      <div className=\"App\">\n        <ol>\n            <li><strike>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</strike></li>\n            <li><strike>Create a new component (=> ValidationComponent) which receives the text length as a prop</strike></li>\n            <li><strike>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</strike></li>\n          <li>Create another component (=> CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n\n          <div>\n              {\n                  this.state.persons.map((person, index) => {\n                      return <Person\n                          click={() => this.deletePersonHandler(index)}\n                          name={person.name}\n                          age={person.age}\n                          key={person.id}\n                          changed={(event) => this.nameChangedHandler(event, person.id)}\n                      />\n                  })\n\n              }\n          </div>\n      })\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}